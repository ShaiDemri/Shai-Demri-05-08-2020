{"version":3,"sources":["utils/getIconById.js","utils/convertTempUnits.js","store/actions.js","utils/getDayOfTheWeek.js","components/WeatherCard.jsx","components/LocationsDropdown.jsx","pages/Weather.jsx"],"names":["mapIconIds","1","2","3","4","5","6","7","8","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","getIconById","id","CelsiusToFahrenheit","temp","toFixed","API_KEY","fetchLocationCodeURL","locationName","fetchWeatherURL","locationCode","fetchOneDayWeatherURL","fetchLocationCode","dispatch","a","type","payload","url","axios","get","response","data","length","parsedRes","map","city","key","Key","name","LocalizedName","country","AdministrativeArea","Country","fetchWeather","console","log","JSON","stringify","parsedResponse","DailyForecasts","dayForcast","Date","Unit","Temperature","Minimum","Value","Maximum","Day","Icon","IconPhrase","HasPrecipitation","Night","fetchOneDayWeather","locationCodes","forEach","err","toggleLocationToFavorite","favoriteItem","getDayOfWeek","date","dayOfWeek","getDay","isNaN","useStyles","makeStyles","theme","card","minWidth","media","height","paddingTop","title","fontSize","pos","marginBottom","container","spacing","defaultWeather","WeatherCard","weather","classes","React","useState","partOfDay","setPartOfDay","temperatureFahrenheit","setTemperatureFahrenheit","onChangeTempratureUnit","tempInCelsius","Grid","className","direction","justify","alignItems","Button","size","onClick","b","p","getDayOfTheWeek","item","xs","Card","variant","CardContent","Typography","component","CardMedia","image","LocationsDropdown","anchorRef","locations","open","setOpen","useEffect","handleClose","event","current","contains","target","handleListKeyDown","preventDefault","prevOpen","useRef","focus","Popper","anchorEl","role","undefined","transition","disablePortal","placement","style","zIndex","TransitionProps","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","location","MenuItem","e","margin","connect","state","locationsCode","locationKey","favorite","bindActionCreators","fetchLocationCodeAction","toggleLocationToFavoriteAction","fetchWeatherAction","searchTerm","setSearchTerm","toggleFavorite","setToggleFavorite","onSearchClick","useCallback","TextField","ref","placeholder","fullWidth","value","onChange","InputLabelProps","shrink","Tooltip","IconButton","color","aria-label","f","Favorite","FavoriteBorder"],"mappings":"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","file":"static/js/6.5f9d7964.chunk.js","sourcesContent":["const mapIconIds = {\n  1: \"https://developer.accuweather.com/sites/default/files/01-s.png\",\n  2: \"https://developer.accuweather.com/sites/default/files/02-s.png\",\n  3: \"https://developer.accuweather.com/sites/default/files/03-s.png\",\n  4: \"https://developer.accuweather.com/sites/default/files/04-s.png\",\n  5: \"https://developer.accuweather.com/sites/default/files/05-s.png\",\n  6: \"https://developer.accuweather.com/sites/default/files/06-s.png\",\n  7: \"https://developer.accuweather.com/sites/default/files/07-s.png\",\n  8: \"https://developer.accuweather.com/sites/default/files/08-s.png\",\n  11: \"https://developer.accuweather.com/sites/default/files/11-s.png\",\n  12: \"https://developer.accuweather.com/sites/default/files/12-s.png\",\n  13: \"https://developer.accuweather.com/sites/default/files/13-s.png\",\n  14: \"https://developer.accuweather.com/sites/default/files/14-s.png\",\n  15: \"https://developer.accuweather.com/sites/default/files/15-s.png\",\n  16: \"https://developer.accuweather.com/sites/default/files/16-s.png\",\n  17: \"https://developer.accuweather.com/sites/default/files/17-s.png\",\n  18: \"https://developer.accuweather.com/sites/default/files/18-s.png\",\n  19: \"https://developer.accuweather.com/sites/default/files/19-s.png\",\n  20: \"https://developer.accuweather.com/sites/default/files/20-s.png\",\n  21: \"https://developer.accuweather.com/sites/default/files/21-s.png\",\n  22: \"https://developer.accuweather.com/sites/default/files/22-s.png\",\n  23: \"https://developer.accuweather.com/sites/default/files/23-s.png\",\n  24: \"https://developer.accuweather.com/sites/default/files/24-s.png\",\n  25: \"https://developer.accuweather.com/sites/default/files/25-s.png\",\n  26: \"https://developer.accuweather.com/sites/default/files/26-s.png\",\n  29: \"https://developer.accuweather.com/sites/default/files/29-s.png\",\n  30: \"https://developer.accuweather.com/sites/default/files/30-s.png\",\n  31: \"https://developer.accuweather.com/sites/default/files/31-s.png\",\n  32: \"https://developer.accuweather.com/sites/default/files/32-s.png\",\n  33: \"https://developer.accuweather.com/sites/default/files/33-s.png\",\n  34: \"https://developer.accuweather.com/sites/default/files/34-s.png\",\n  35: \"https://developer.accuweather.com/sites/default/files/35-s.png\",\n  36: \"https://developer.accuweather.com/sites/default/files/36-s.png\",\n  37: \"https://developer.accuweather.com/sites/default/files/37-s.png\",\n  38: \"https://developer.accuweather.com/sites/default/files/38-s.png\",\n  39: \"https://developer.accuweather.com/sites/default/files/39-s.png\",\n  40: \"https://developer.accuweather.com/sites/default/files/40-s.png\",\n  41: \"https://developer.accuweather.com/sites/default/files/41-s.png\",\n  42: \"https://developer.accuweather.com/sites/default/files/42-s.png\",\n  43: \"https://developer.accuweather.com/sites/default/files/43-s.png\",\n  44: \"https://developer.accuweather.com/sites/default/files/44-s.png\",\n};\n\nconst getIconById = (id) => {\n  return mapIconIds[id];\n};\nexport default getIconById;\n","const CelsiusToFahrenheit = (temp) => {\n  const tempInFahrenheit = (temp * 9) / 5 + 32;\n  return tempInFahrenheit.toFixed(2);\n};\nconst FahrenheitToCelsius = (temp) => {\n  const tempInCelsius = ((temp - 32) * 5) / 9;\n  return tempInCelsius.toFixed(2);\n};\n\nexport { CelsiusToFahrenheit, FahrenheitToCelsius };\n","import axios from \"axios\";\nconst API_KEY = \"Jk0eCaZKTjS35inGGK8R9r8R0bFxgGB5\";\nconst fetchLocationCodeURL = (locationName) =>\n  `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${locationName}`;\nconst fetchWeatherURL = (locationCode) =>\n  `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationCode}?apikey=${API_KEY}&metric=true`;\nconst fetchOneDayWeatherURL = (locationCode) =>\n  `https://dataservice.accuweather.com/forecasts/v1/daily/1day/${locationCode}?apikey=${API_KEY}&metric=true`;\n\nexport const fetchLocationCode = (locationName) => async (dispatch) => {\n  if (!locationName) {\n    return dispatch({\n      type: \"FETCH_CITIES_CODE\",\n      payload: [],\n    });\n  }\n  try {\n    const url = fetchLocationCodeURL(locationName);\n    const response = await axios.get(url);\n    if (response.data.length > 1) {\n      const parsedRes = response.data.map((city) => {\n        return {\n          key: city.Key,\n          name: city.LocalizedName,\n          country:\n            city.AdministrativeArea.LocalizedName +\n            \",\" +\n            city.Country.LocalizedName,\n        };\n      });\n      return dispatch({\n        type: \"FETCH_CITIES_CODE\",\n        payload: parsedRes,\n      });\n    } else {\n      return dispatch(fetchWeather(response.data[0].Key));\n    }\n  } catch (err) {\n    console.log(\"Got an error!\", JSON.stringify(err));\n  }\n};\nexport const fetchWeather = (locationCode) => async (dispatch) => {\n  try {\n    const url = fetchWeatherURL(locationCode);\n    const response = await axios.get(url);\n    const parsedResponse = {\n      DailyForecasts: response.data.DailyForecasts.map((dayForcast) => {\n        return {\n          Date: dayForcast.Date,\n          Unit: dayForcast.Temperature.Minimum.Unit,\n          Temperature: {\n            Minimum: dayForcast.Temperature.Minimum.Value,\n            Maximum: dayForcast.Temperature.Maximum.Value,\n          },\n          Day: {\n            Icon: dayForcast.Day.Icon,\n            IconPhrase: dayForcast.Day.IconPhrase,\n            HasPrecipitation: dayForcast.Day.HasPrecipitation,\n          },\n          Night: {\n            Icon: dayForcast.Night.Icon,\n            IconPhrase: dayForcast.Night.IconPhrase,\n            HasPrecipitation: dayForcast.Night.HasPrecipitation,\n          },\n        };\n      }),\n    };\n    return dispatch({\n      type: \"FETCH_WEATHER\",\n      payload: {\n        Key: locationCode,\n        DailyForecasts: parsedResponse.DailyForecasts,\n      },\n    });\n  } catch (err) {\n    console.log(\"Got an error!\", JSON.stringify(err));\n  }\n};\nexport const fetchOneDayWeather = (locationCodes) => (dispatch) => {\n  try {\n    locationCodes.forEach(async (locationCode) => {\n      const url = fetchOneDayWeatherURL(locationCode);\n      const response = await axios.get(url);\n      return dispatch({\n        type: \"FETCH_ONE_DAY_WEATHER\",\n        payload: { response: response.data, locationCode },\n      });\n    });\n  } catch (err) {\n    console.log(\"Got an error!\", JSON.stringify(err));\n  }\n};\nexport const toggleLocationToFavorite = (favoriteItem) => (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_FAVORITE\",\n    payload: favoriteItem,\n  });\n};\n","const getDayOfWeek = (date) => {\n  const dayOfWeek = new Date(date).getDay();\n  return isNaN(dayOfWeek)\n    ? null\n    : [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ][dayOfWeek];\n};\nexport default getDayOfWeek;\n","import React from \"react\";\nimport {\n  CardMedia,\n  Grid,\n  Typography,\n  Card,\n  CardContent,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport getDayOfTheWeek from \"../utils/getDayOfTheWeek\";\nimport getIconById from \"../utils/getIconById\";\nimport { CelsiusToFahrenheit } from \"../utils/convertTempUnits\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    minWidth: 275,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  container: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst defaultWeather = [\n  {\n    Date: \"2020-08-09T07:00:00+03:00\",\n    Unit: \"C\",\n    Temperature: {\n      Minimum: 25.6,\n      Maximum: 30.2,\n    },\n    Day: {\n      Icon: 2,\n      IconPhrase: \"Mostly sunny\",\n      HasPrecipitation: false,\n    },\n    Night: {\n      Icon: 35,\n      IconPhrase: \"Partly cloudy\",\n      HasPrecipitation: false,\n    },\n  },\n  {\n    Date: \"2020-08-10T07:00:00+03:00\",\n    Unit: \"C\",\n    Temperature: {\n      Minimum: 24.9,\n      Maximum: 30.7,\n    },\n    Day: {\n      Icon: 3,\n      IconPhrase: \"Partly sunny\",\n      HasPrecipitation: false,\n    },\n    Night: {\n      Icon: 35,\n      IconPhrase: \"Partly cloudy\",\n      HasPrecipitation: false,\n    },\n  },\n  {\n    Date: \"2020-08-11T07:00:00+03:00\",\n    Unit: \"C\",\n    Temperature: {\n      Minimum: 26.1,\n      Maximum: 31,\n    },\n    Day: {\n      Icon: 3,\n      IconPhrase: \"Partly sunny\",\n      HasPrecipitation: false,\n    },\n    Night: {\n      Icon: 35,\n      IconPhrase: \"Partly cloudy\",\n      HasPrecipitation: false,\n    },\n  },\n  {\n    Date: \"2020-08-12T07:00:00+03:00\",\n    Unit: \"C\",\n    Temperature: {\n      Minimum: 25.3,\n      Maximum: 30.7,\n    },\n    Day: {\n      Icon: 3,\n      IconPhrase: \"Partly sunny\",\n      HasPrecipitation: false,\n    },\n    Night: {\n      Icon: 34,\n      IconPhrase: \"Mostly clear\",\n      HasPrecipitation: false,\n    },\n  },\n  {\n    Date: \"2020-08-13T07:00:00+03:00\",\n    Unit: \"C\",\n    Temperature: {\n      Minimum: 25.6,\n      Maximum: 31.4,\n    },\n    Day: {\n      Icon: 2,\n      IconPhrase: \"Mostly sunny\",\n      HasPrecipitation: false,\n    },\n    Night: {\n      Icon: 35,\n      IconPhrase: \"Partly cloudy\",\n      HasPrecipitation: false,\n    },\n  },\n];\nconst WeatherCard = ({ weather = defaultWeather }) => {\n  const classes = useStyles();\n  const [partOfDay, setPartOfDay] = React.useState(\"Day\");\n  const [temperatureFahrenheit, setTemperatureFahrenheit] = React.useState(\n    false\n  );\n\n  const onChangePartOfDay = () => {\n    return setPartOfDay((p) => {\n      return p === \"Day\" ? \"Night\" : \"Day\";\n    });\n  };\n  const onChangeTempratureUnit = (tempInCelsius) => {\n    return temperatureFahrenheit\n      ? CelsiusToFahrenheit(tempInCelsius)\n      : tempInCelsius;\n  };\n\n  return (\n    <>\n      <Grid\n        className={classes.container}\n        container\n        direction=\"row\"\n        spacing={3}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Button\n          size=\"small\"\n          onClick={() => setTemperatureFahrenheit((b) => !b)}\n        >\n          Change To {temperatureFahrenheit ? \"Celsius\" : \"Fahrenheit\"}\n        </Button>\n\n        <Button size=\"small\" onClick={() => onChangePartOfDay()}>\n          View {partOfDay === \"Day\" ? \"Night\" : \"Day\"}\n        </Button>\n      </Grid>\n      <Grid\n        className={classes.container}\n        container\n        direction=\"row\"\n        spacing={3}\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        {weather.map((dayForcast) => {\n          const title = getDayOfTheWeek(dayForcast.Date);\n          return (\n            <Grid key={dayForcast.Date} item xs={\"auto\"}>\n              <Card className={classes.card} variant=\"outlined\">\n                <CardContent>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {`The Temperature will range`} <br />\n                    {`from ${onChangeTempratureUnit(\n                      dayForcast.Temperature.Minimum\n                    )}${\n                      temperatureFahrenheit ? \"F\" : \"C\"\n                    } to ${onChangeTempratureUnit(\n                      dayForcast.Temperature.Maximum\n                    )}${temperatureFahrenheit ? \"F\" : \"C\"}`}\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"p\">\n                    The {partOfDay} will be {dayForcast[partOfDay].IconPhrase}\n                  </Typography>\n                </CardContent>\n                <CardMedia\n                  className={classes.media}\n                  image={getIconById(dayForcast[partOfDay].Icon)}\n                  title={dayForcast[partOfDay].IconPhrase}\n                />\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\nWeatherCard.propTypes = {\n  weather: PropTypes.array,\n};\nexport default WeatherCard;\n","import React from \"react\";\nimport {\n  ClickAwayListener,\n  Grow,\n  Paper,\n  Popper,\n  MenuItem,\n  MenuList,\n  Typography,\n} from \"@material-ui/core/\";\n\nconst LocationsDropdown = ({ anchorRef, locations = [], fetchWeather }) => {\n  const [open, setOpen] = React.useState(false);\n  React.useEffect(() => {\n    if (locations.length > 0) {\n      setOpen(true);\n    }\n    return () => {\n      setOpen(false);\n    };\n  }, [locations]);\n\n  const handleClose = (event, locationCode) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    fetchWeather(locationCode);\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <Popper\n      open={open}\n      anchorEl={anchorRef.current}\n      role={undefined}\n      transition\n      disablePortal\n      placement=\"bottom-start\"\n      style={{ zIndex: \"1\" }}\n    >\n      {({ TransitionProps, placement }) => (\n        <Grow\n          {...TransitionProps}\n          style={{\n            transformOrigin:\n              placement === \"bottom\" ? \"center top\" : \"center bottom\",\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={handleClose}>\n              <MenuList\n                autoFocusItem={open}\n                id=\"menu-list-grow\"\n                onKeyDown={handleListKeyDown}\n              >\n                {locations.length > 0 ? (\n                  <Typography variant=\"h3\">\n                    Multiple locations found. Please choose one.\n                  </Typography>\n                ) : (\n                  <></>\n                )}\n                {locations.map((location) => {\n                  return (\n                    <MenuItem\n                      key={location.key}\n                      onClick={(e) => handleClose(e, location.key)}\n                    >\n                      {location.name},{location.country}\n                    </MenuItem>\n                  );\n                })}\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  );\n};\nexport default LocationsDropdown;\n","import React from \"react\";\nimport {\n  TextField,\n  Grid,\n  IconButton,\n  Tooltip,\n  makeStyles,\n} from \"@material-ui/core\";\nimport {\n  Favorite as FavoriteIcon,\n  FavoriteBorder as FavoriteBorderIcon,\n} from \"@material-ui/icons/\";\nimport Button from \"../components/AnimatedButton\";\nimport WeatehrCard from \"../components/WeatherCard\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  fetchWeather as fetchWeatherAction,\n  fetchLocationCode as fetchLocationCodeAction,\n  toggleLocationToFavorite as toggleLocationToFavoriteAction,\n} from \"../store/actions\";\nimport LocationsDropdown from \"../components/LocationsDropdown\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: theme.spacing(5),\n  },\n}));\nconst Weather = ({\n  weather,\n  locationKey,\n  locationsCode,\n  fetchWeather,\n  fetchLocationCode,\n  toggleLocationToFavorite,\n}) => {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = React.useState(\"Tel Aviv\");\n  const [toggleFavorite, setToggleFavorite] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const onSearchClick = React.useCallback(() => {\n    setToggleFavorite(false);\n    fetchLocationCode(searchTerm);\n  }, [fetchLocationCode, searchTerm]);\n\n  const onFavoriteClick = () => {\n    setToggleFavorite((f) => !f);\n    toggleLocationToFavorite({ key: locationKey, name: searchTerm });\n  };\n\n  React.useEffect(() => {\n    onSearchClick();\n    return () => {\n      fetchLocationCode();\n    };\n  }, []);\n  return (\n    <Grid>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={8} item className={classes.container}>\n          <TextField\n            ref={anchorRef}\n            id=\"city-search-field\"\n            placeholder=\"Enter a city to see the upcoming days weather!\"\n            fullWidth\n            margin=\"normal\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid xs={2} item className={classes.container}>\n          <Button onClick={() => onSearchClick()}>Search</Button>\n          <Tooltip\n            title={toggleFavorite ? \"Remove From Favorite\" : \"Add To Favorite\"}\n          >\n            <IconButton\n              color=\"secondary\"\n              aria-label=\"favorite\"\n              onClick={() => onFavoriteClick()}\n            >\n              {toggleFavorite ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <LocationsDropdown\n        anchorRef={anchorRef}\n        locations={locationsCode}\n        fetchWeather={fetchWeather}\n      />\n      <WeatehrCard weather={weather} />\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    locationsCode: state.locationsCode,\n    weather: state.weather.DailyForecasts,\n    locationKey: state.weather.Key,\n    favorite: state.favorite,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchLocationCode: fetchLocationCodeAction,\n      toggleLocationToFavorite: toggleLocationToFavoriteAction,\n      fetchWeather: fetchWeatherAction,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\n\nWeather.propTypes = {\n  props: PropTypes.any,\n};\n"],"sourceRoot":""}