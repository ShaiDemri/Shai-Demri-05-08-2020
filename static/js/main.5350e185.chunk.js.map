{"version":3,"sources":["store/reducers.js","store/index.js","components/AppBar.jsx","module/LazyComponent.jsx","module/AppModule.jsx","components/ErrorBoundary.jsx","App.jsx","serviceWorker.js","index.js","components/AnimatedLinkButton.jsx","components/AnimatedButton.jsx"],"names":["parseResponse","response","DailyForecasts","map","dayForcast","Date","Unit","Temperature","Minimum","Value","Maximum","Day","Icon","IconPhrase","HasPrecipitation","Night","combineReducers","locationsCode","state","action","type","payload","weather","oneDayWeather","favoriteWeather","newWeather","locationCode","favorite","newFavorite","index","findIndex","fav","key","push","splice","composeSetup","compose","finalCreateStore","applyMiddleware","thunk","createStore","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","appBar","marginBottom","title","link","textDecoration","color","TopBar","colorScheme","setColorScheme","classes","React","useState","top","left","bottom","right","setState","toggleDrawer","anchor","open","event","AppBar","position","className","Toolbar","Grid","container","justify","direction","alignItems","IconButton","edge","aria-label","onClick","Menu","Drawer","onClose","clsx","list","fullList","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","to","Typography","variant","item","AnimatedLinkButton","linkTo","buttonText","FormControlLabel","control","Switch","checked","onChange","name","label","Loading","error","LazyComponent","loader","Loadable","loading","Weather","Favorite","PageNotFound","handleRouteChange","Component","location","memo","from","path","exact","render","ErrorBoundary","console","this","props","children","PureComponent","store","reducer","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","breakpoints","keys","values","xs","sm","md","lg","xl","tablet","laptop","desktop","ThemeProvider","CssBaseline","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","rest","AnimatedButton","withStyles","background","boxShadow","borderRadius","border","height","transform","animation","animationTimingFunction","Button"],"mappings":"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","file":"static/js/main.5350e185.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\n\nconst fetchLocationCodeReducer = (state = [], action) => {\n  //   console.log(\"fetchLocationCodeReducer\");\n  switch (action.type) {\n    case \"FETCH_CITIES_CODE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst fetchWeatherReducer = (state = [], action) => {\n  //   console.log(\"fetchWeatherReducer\");\n  switch (action.type) {\n    case \"FETCH_WEATHER\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst parseResponse = (response) => {\n  return {\n    DailyForecasts: response.DailyForecasts.map((dayForcast) => {\n      return {\n        Date: dayForcast.Date,\n        Unit: dayForcast.Temperature.Minimum.Unit,\n        Temperature: {\n          Minimum: dayForcast.Temperature.Minimum.Value,\n          Maximum: dayForcast.Temperature.Maximum.Value,\n        },\n        Day: {\n          Icon: dayForcast.Day.Icon,\n          IconPhrase: dayForcast.Day.IconPhrase,\n          HasPrecipitation: dayForcast.Day.HasPrecipitation,\n        },\n        Night: {\n          Icon: dayForcast.Night.Icon,\n          IconPhrase: dayForcast.Night.IconPhrase,\n          HasPrecipitation: dayForcast.Night.HasPrecipitation,\n        },\n      };\n    }),\n  };\n};\n\nconst fetchOneDayWeatherReducer = (state = {}, action) => {\n  //   console.log(\"fetchOneDayWeatherReducer\");\n  switch (action.type) {\n    case \"FETCH_ONE_DAY_WEATHER\":\n      const favoriteWeather = parseResponse(action.payload.response);\n      const newWeather = { ...state };\n      newWeather[action.payload.locationCode] =\n        favoriteWeather.DailyForecasts[0];\n      return newWeather;\n    default:\n      return state;\n  }\n};\nconst favoriteReducer = (state = [], action) => {\n  //   console.log(\"favoriteReducer\", state);\n  switch (action.type) {\n    case \"TOGGLE_FAVORITE\":\n      const newFavorite = [...state];\n\n      const index = state.findIndex((fav) => fav.key === action.payload.key);\n      if (index === -1) {\n        // we don't have it yet, add it\n        newFavorite.push(action.payload);\n      } else {\n        //we have it, remove it\n        newFavorite.splice(index, 1);\n      }\n      return newFavorite;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  locationsCode: fetchLocationCodeReducer,\n  weather: fetchWeatherReducer,\n  oneDayWeather: fetchOneDayWeatherReducer,\n  favorite: favoriteReducer,\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\n\nconst composeSetup =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nlet finalCreateStore = compose(composeSetup(applyMiddleware(thunk)))(\n  createStore\n);\n\nexport default function configureStore(initialState) {\n  return finalCreateStore(reducer, initialState);\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  FormControlLabel,\n  Switch,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Grid,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Grade as StarIcon,\n  Menu as MenuIcon,\n  AcUnit as SnowIcon,\n} from \"@material-ui/icons/\";\nimport AnimatedLinkButton from \"../components/AnimatedLinkButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  appBar: {\n    marginBottom: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"yellow\",\n  },\n}));\nconst TopBar = ({ colorScheme, setColorScheme }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  const handleChange = () => {\n    setColorScheme(() => {\n      return colorScheme === \"dark\" ? \"light\" : \"dark\";\n    });\n  };\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <SnowIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary={\n              <Link className={classes.link} to=\"/\">\n                Weather\n              </Link>\n            }\n          />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <StarIcon color=\"error\" />\n          </ListItemIcon>\n          <ListItemText\n            primary={\n              <Link className={classes.link} to=\"favorite\">\n                Favorite\n              </Link>\n            }\n          />\n        </ListItem>\n      </List>\n    </div>\n  );\n  const anchor = \"left\";\n  return (\n    <AppBar position=\"sticky\" className={classes.appBar}>\n      <Toolbar>\n        <Grid\n          container\n          justify=\"flex-end\"\n          direction=\"row\"\n          spacing={2}\n          alignItems=\"center\"\n        >\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n          <Typography variant=\"h6\" className={classes.title}>\n            Forecast Displayer\n          </Typography>\n\n          <Grid item>\n            <AnimatedLinkButton\n              className={classes.link}\n              linkTo=\"favorite\"\n              buttonText={\"Favorite\"}\n            />\n          </Grid>\n          <Grid item>\n            <AnimatedLinkButton\n              className={classes.link}\n              linkTo=\"/\"\n              buttonText={\"Weather\"}\n            />\n          </Grid>\n\n          <Grid item>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={colorScheme === \"dark\"}\n                  onChange={handleChange}\n                  name=\"darkMode\"\n                />\n              }\n              label=\"Dark Mode\"\n            />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default TopBar;\n","import Loadable from 'react-loadable';\n\nfunction Loading({error}) {\n    if (error) {\n        return null;\n    }\n    return null;\n}\n\nconst LazyComponent = loader =>\n    Loadable({\n        loader,\n        loading: Loading\n    });\n\nexport default LazyComponent;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport LazyComponent from \"./LazyComponent\";\n\nconst Weather = LazyComponent(() => import(\"../pages/Weather\"));\nconst Favorite = LazyComponent(() => import(\"../pages/Favorite\"));\nconst PageNotFound = LazyComponent(() => import(\"../pages/404\"));\n\nconst handleRouteChange = (Component) => {\n  return ({ location }) => {\n    return <Component />;\n  };\n};\nfunction AppModule() {\n  return (\n    <Switch>\n      <Redirect from=\"/Shai-Demri-05-08-2020\" to=\"/\" />\n      <Route path=\"/\" exact render={handleRouteChange(Weather)} />\n      <Route path=\"/favorite\" render={handleRouteChange(Favorite)} />\n      <Route path=\"/404\" render={handleRouteChange(PageNotFound)} />\n      <Redirect from=\"*\" to=\"/404\" />\n    </Switch>\n  );\n}\nexport default React.memo(AppModule);\n","import { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ErrorBoundary extends PureComponent {\n  static getDerivedStateFromError(error) {\n    console.error(error);\n  }\n\n  componentDidCatch(error) {\n    console.error(error);\n  }\n\n  render() {\n    const { children } = this.props;\n    return children;\n  }\n}\nErrorBoundary.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { useMediaQuery, CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport configureStore from \"./store\";\nimport AppBar from \"./components/AppBar\";\nimport AppModule from \"./module/AppModule\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nconst initialState = {\n  locationsCode: [],\n  weather: [],\n  oneDayWeather: [],\n  favorite: [],\n};\nlet store = configureStore(initialState);\n\nfunction App() {\n  const [colorScheme, setColorScheme] = React.useState(\"dark\");\n  const prefersDarkMode = useMediaQuery(\n    `(prefers-color-scheme: ${colorScheme})`\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n        breakpoints: {\n          keys: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"tablet\", \"laptop\", \"desktop\"],\n          values: {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n            tablet: 640,\n            laptop: 1024,\n            desktop: 1280,\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter>\n          <AppBar colorScheme={colorScheme} setColorScheme={setColorScheme} />\n          <ErrorBoundary>\n            <AppModule />\n          </ErrorBoundary>\n        </BrowserRouter>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./AnimatedButton\";\nimport PropTypes from \"prop-types\";\n\nconst AnimatedLinkButton = ({ linkTo, buttonText, ...rest }) => {\n  return (\n    <Link to={linkTo} {...rest}>\n      <Button {...rest}>{buttonText}</Button>\n    </Link>\n  );\n};\nexport default AnimatedLinkButton;\n\nAnimatedLinkButton.propTypes = {\n  linkTo: PropTypes.string.isRequired,\n  buttonText: PropTypes.string.isRequired,\n};\n","import { Button } from \"@material-ui/core/\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst AnimatedButton = withStyles((theme) => ({\n  root: {\n    color: \"white\",\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n    boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .3)\",\n    borderRadius: 3,\n    border: 0,\n    height: 30,\n    \"@global\": {\n      \"@keyframes jiggle\": {\n        \"0%\": {\n          transform: \"translateY(2px)\",\n        },\n        \"25%\": {\n          transform: \"translateY(-2px)\",\n        },\n        \"50%\": {\n          transform: \"translateY(2px)\",\n        },\n        \"75%\": {\n          transform: \"translateY(-2px)\",\n        },\n        \"100%\": {\n          transform: \"translateY(2px)\",\n        },\n      },\n    },\n    \"&:hover\": {\n      animation: \"$jiggle 0.5s infinite\",\n      animationTimingFunction: \"ease-out\",\n    },\n  },\n}))(Button);\n\nexport default AnimatedButton;\n"],"sourceRoot":""}